<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xyz.ztzhome.zblog.mapper.SongPlayListMapper">

    <!-- 定义 SongPlayList resultMap -->
    <resultMap id="SongPlayListResultMap" type="xyz.ztzhome.zblog.entity.Bean.SongPlayList">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="coverPath" column="cover_path"/>
        <result property="isPublic" column="is_public"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <!-- 定义 PlayListVO resultMap -->
    <resultMap id="PlayListVOResultMap" type="xyz.ztzhome.zblog.entity.VO.PlayListVO">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="coverPath" column="cover_path"/>
        <result property="isPublic" column="is_public"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="songCount" column="song_count"/>
        <result property="favoriteCount" column="favorite_count"/>
    </resultMap>

    <!-- 定义 PlayListDetailVO resultMap -->
    <resultMap id="PlayListDetailVOResultMap" type="xyz.ztzhome.zblog.entity.VO.PlayListDetailVO">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="coverPath" column="cover_path"/>
        <result property="isPublic" column="is_public"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="songCount" column="song_count"/>
        <result property="favoriteCount" column="favorite_count"/>
    </resultMap>

    <!-- 创建歌单 -->
    <insert id="insertPlayList" parameterType="xyz.ztzhome.zblog.entity.Bean.SongPlayList" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tb_song_playlist (user_id, name, description, cover_path, is_public, create_time, update_time)
        VALUES (#{userId}, #{name}, #{description}, #{coverPath}, #{isPublic}, #{createTime}, #{updateTime})
    </insert>

    <!-- 根据ID查询歌单 -->
    <select id="selectPlayListById" resultMap="SongPlayListResultMap">
        SELECT * FROM tb_song_playlist WHERE id = #{id}
    </select>

    <!-- 根据ID查询歌单VO -->
    <select id="selectPlayListVOById" resultMap="PlayListVOResultMap">
        SELECT 
            p.id, p.user_id, p.name, p.description, p.cover_path, p.is_public, 
            p.create_time, p.update_time,
            u.nickname AS user_name,
            COALESCE(sc.song_count, 0) AS song_count,
            COALESCE(fc.favorite_count, 0) AS favorite_count
        FROM tb_song_playlist p
        LEFT JOIN tb_user u ON p.user_id = u.id
        LEFT JOIN (
            SELECT playlist_id, COUNT(*) AS song_count 
            FROM tb_song_playlist_song 
            GROUP BY playlist_id
        ) sc ON p.id = sc.playlist_id
        LEFT JOIN (
            SELECT playlist_id, COUNT(*) AS favorite_count 
            FROM tb_user_favorite_playlist 
            GROUP BY playlist_id
        ) fc ON p.id = fc.playlist_id
        WHERE p.id = #{id}
    </select>

    <!-- 根据ID查询歌单详情VO -->
    <select id="selectPlayListDetailById" resultMap="PlayListDetailVOResultMap">
        SELECT 
            p.id, p.user_id, p.name, p.description, p.cover_path, p.is_public, 
            p.create_time, p.update_time,
            u.nickname AS user_name,
            COALESCE(sc.song_count, 0) AS song_count,
            COALESCE(fc.favorite_count, 0) AS favorite_count
        FROM tb_song_playlist p
        LEFT JOIN tb_user u ON p.user_id = u.id
        LEFT JOIN (
            SELECT playlist_id, COUNT(*) AS song_count 
            FROM tb_song_playlist_song 
            GROUP BY playlist_id
        ) sc ON p.id = sc.playlist_id
        LEFT JOIN (
            SELECT playlist_id, COUNT(*) AS favorite_count 
            FROM tb_user_favorite_playlist 
            GROUP BY playlist_id
        ) fc ON p.id = fc.playlist_id
        WHERE p.id = #{id}
    </select>

    <!-- 更新歌单 -->
    <update id="updatePlayList" parameterType="xyz.ztzhome.zblog.entity.Bean.SongPlayList">
        UPDATE tb_song_playlist
        <set>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="description != null">description = #{description},</if>
            <if test="coverPath != null">cover_path = #{coverPath},</if>
            <if test="isPublic != null">is_public = #{isPublic},</if>
            update_time = #{updateTime}
        </set>
        WHERE id = #{id}
    </update>

    <!-- 删除歌单 -->
    <delete id="deletePlayList">
        DELETE FROM tb_song_playlist WHERE id = #{id}
    </delete>

    <!-- 根据用户ID查询创建的歌单 -->
    <select id="selectPlayListsByUserId" resultMap="PlayListVOResultMap">
        SELECT 
            p.id, p.user_id, p.name, p.description, p.cover_path, p.is_public, 
            p.create_time, p.update_time,
            u.nickname AS user_name,
            COALESCE(sc.song_count, 0) AS song_count,
            COALESCE(fc.favorite_count, 0) AS favorite_count
        FROM tb_song_playlist p
        LEFT JOIN tb_user u ON p.user_id = u.id
        LEFT JOIN (
            SELECT playlist_id, COUNT(*) AS song_count 
            FROM tb_song_playlist_song 
            GROUP BY playlist_id
        ) sc ON p.id = sc.playlist_id
        LEFT JOIN (
            SELECT playlist_id, COUNT(*) AS favorite_count 
            FROM tb_user_favorite_playlist 
            GROUP BY playlist_id
        ) fc ON p.id = fc.playlist_id
        WHERE p.user_id = #{userId}
        ORDER BY p.create_time DESC
    </select>

    <!-- 根据用户ID分页查询创建的歌单 -->
    <select id="selectPlayListsByUserIdWithPage" resultMap="PlayListVOResultMap">
        SELECT 
            p.id, p.user_id, p.name, p.description, p.cover_path, p.is_public, 
            p.create_time, p.update_time,
            u.nickname AS user_name,
            COALESCE(sc.song_count, 0) AS song_count,
            COALESCE(fc.favorite_count, 0) AS favorite_count
        FROM tb_song_playlist p
        LEFT JOIN tb_user u ON p.user_id = u.id
        LEFT JOIN (
            SELECT playlist_id, COUNT(*) AS song_count 
            FROM tb_song_playlist_song 
            GROUP BY playlist_id
        ) sc ON p.id = sc.playlist_id
        LEFT JOIN (
            SELECT playlist_id, COUNT(*) AS favorite_count 
            FROM tb_user_favorite_playlist 
            GROUP BY playlist_id
        ) fc ON p.id = fc.playlist_id
        WHERE p.user_id = #{userId}
        ORDER BY p.create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 查询用户创建的歌单数量 -->
    <select id="countPlayListsByUserId" resultType="int">
        SELECT COUNT(*) FROM tb_song_playlist WHERE user_id = #{userId}
    </select>

    <!-- 根据歌单名称模糊查询公开歌单 -->
    <select id="selectPublicPlayListsByNameLike" resultMap="PlayListVOResultMap">
        SELECT 
            p.id, p.user_id, p.name, p.description, p.cover_path, p.is_public, 
            p.create_time, p.update_time,
            u.nickname AS user_name,
            COALESCE(sc.song_count, 0) AS song_count,
            COALESCE(fc.favorite_count, 0) AS favorite_count
        FROM tb_song_playlist p
        LEFT JOIN tb_user u ON p.user_id = u.id
        LEFT JOIN (
            SELECT playlist_id, COUNT(*) AS song_count 
            FROM tb_song_playlist_song 
            GROUP BY playlist_id
        ) sc ON p.id = sc.playlist_id
        LEFT JOIN (
            SELECT playlist_id, COUNT(*) AS favorite_count 
            FROM tb_user_favorite_playlist 
            GROUP BY playlist_id
        ) fc ON p.id = fc.playlist_id
        WHERE p.is_public = 1 AND p.name LIKE CONCAT('%', #{name}, '%')
        ORDER BY p.create_time DESC
    </select>

    <!-- 根据歌单名称模糊查询公开歌单，分页 -->
    <select id="selectPublicPlayListsByNameLikeWithPage" resultMap="PlayListVOResultMap">
        SELECT 
            p.id, p.user_id, p.name, p.description, p.cover_path, p.is_public, 
            p.create_time, p.update_time,
            u.nickname AS user_name,
            COALESCE(sc.song_count, 0) AS song_count,
            COALESCE(fc.favorite_count, 0) AS favorite_count
        FROM tb_song_playlist p
        LEFT JOIN tb_user u ON p.user_id = u.id
        LEFT JOIN (
            SELECT playlist_id, COUNT(*) AS song_count 
            FROM tb_song_playlist_song 
            GROUP BY playlist_id
        ) sc ON p.id = sc.playlist_id
        LEFT JOIN (
            SELECT playlist_id, COUNT(*) AS favorite_count 
            FROM tb_user_favorite_playlist 
            GROUP BY playlist_id
        ) fc ON p.id = fc.playlist_id
        WHERE p.is_public = 1 AND p.name LIKE CONCAT('%', #{name}, '%')
        ORDER BY p.create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 查询公开歌单总数 -->
    <select id="countPublicPlayLists" resultType="int">
        SELECT COUNT(*) FROM tb_song_playlist WHERE is_public = 1
    </select>

    <!-- 查询热门歌单（按收藏数排序） -->
    <select id="selectHotPlayLists" resultMap="PlayListVOResultMap">
        SELECT 
            p.id, p.user_id, p.name, p.description, p.cover_path, p.is_public, 
            p.create_time, p.update_time,
            u.nickname AS user_name,
            COALESCE(sc.song_count, 0) AS song_count,
            COALESCE(fc.favorite_count, 0) AS favorite_count
        FROM tb_song_playlist p
        LEFT JOIN tb_user u ON p.user_id = u.id
        LEFT JOIN (
            SELECT playlist_id, COUNT(*) AS song_count 
            FROM tb_song_playlist_song 
            GROUP BY playlist_id
        ) sc ON p.id = sc.playlist_id
        LEFT JOIN (
            SELECT playlist_id, COUNT(*) AS favorite_count 
            FROM tb_user_favorite_playlist 
            GROUP BY playlist_id
        ) fc ON p.id = fc.playlist_id
        WHERE p.is_public = 1
        ORDER BY favorite_count DESC, p.create_time DESC
        LIMIT #{limit}
    </select>

</mapper>